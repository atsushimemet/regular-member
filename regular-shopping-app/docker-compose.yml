services:
  # PostgreSQL データベース
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: regular_shopping
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # バックエンド API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: regular_shopping
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:3000
      # predictions feature flags
      PREDICTOR_URL: http://predictor:5000
      PREDICTIONS_ENABLED: "false"
      PREDICTIONS_COUPLE_ALLOWLIST: ""
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./server:/app/server

  # フロントエンド（開発環境）
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      CHOKIDAR_USEPOLLING: "true"
      # predictions feature flag for UI
      REACT_APP_SHOW_PREDICTIONS: "false"
    depends_on:
      - api
    stdin_open: true
    tty: true

  # フロントエンド（本番環境）
  frontend-prod:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      # predictions feature flag for UI
      REACT_APP_SHOW_PREDICTIONS: "false"
    depends_on:
      - api
    profiles:
      - production

volumes:
  postgres_data:
